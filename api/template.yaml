AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Demo app to showcase Amazon Location Service.

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: python3.8
    Timeout: 60
  Api:
    Cors: "'*'"

Resources:
  DevicesTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: Devices
      PrimaryKey:
        Name: DeviceId
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  # Temporary role with too-wide permissions. Should create one role per
  # function with least privilege principle.
  GenericLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  GetGeofencesFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: app.get_geofences
      Role: !GetAtt GenericLambdaExecutionRole.Arn
      Events:
        GetGeofences:
          Type: Api
          Properties:
            Path: /geofences
            Method: GET

  CreateGeofenceFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: app.create_geofence
      Role: !GetAtt GenericLambdaExecutionRole.Arn
      Events:
        CreateGeofence:
          Type: Api
          Properties:
            Path: /geofences
            Method: POST

  DeleteGeofenceFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: app.delete_geofence
      Role: !GetAtt GenericLambdaExecutionRole.Arn
      Events:
        DeleteGeofence:
          Type: Api
          Properties:
            Path: /geofences/{id}
            Method: DELETE

  GetDevicesFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: app.get_devices
      Role: !GetAtt GenericLambdaExecutionRole.Arn
      Events:
        GetGeofences:
          Type: Api
          Properties:
            Path: /devices
            Method: GET

  CreateDeviceFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: app.create_device
      Role: !GetAtt GenericLambdaExecutionRole.Arn
      Events:
        GetGeofences:
          Type: Api
          Properties:
            Path: /devices
            Method: POST

  DeleteDeviceFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: app.delete_device
      Role: !GetAtt GenericLambdaExecutionRole.Arn
      Events:
        DeleteGeofence:
          Type: Api
          Properties:
            Path: /devices/{id}
            Method: DELETE

  GetDevicePositionFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: app.get_device_position
      Role: !GetAtt GenericLambdaExecutionRole.Arn
      Events:
        GetDevicePosition:
          Type: Api
          Properties:
            Path: /devices/{id}/position
            Method: GET

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
